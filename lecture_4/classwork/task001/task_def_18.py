# Области видимости: global и nonlocal
# Хорошая функция работает как чёрный ящик. Использует только переданные ей
# значения и возвращает ответ. Но в Python функции могут обращаться к внешним
# переменным без явной передачи в качестве аргумента.
# В Python есть несколько областей видимости:
# ● локальная — код внутри самой функции, т.е. переменные заданные в теле
# функции.
# ● глобальная — код модуля, т.е. переменные заданные в файле py содержащем
# функцию.
# ● не локальная — код внешней функции, исключающий доступ к глобальным
# переменным.
# Разберем на примерах.
# ● Локальные переменные:
def func(y: int) -> int:
    x = 100
    print(f'In func {x = }')  # Для демонстрации работы, но не для привычки принтить из функции
    return y + 1


x = 42
print(f'In main {x = }')
z = func(x)
print(f'{x = }\t{z = }')
