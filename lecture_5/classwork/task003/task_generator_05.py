# Генераторы
# List comprehensions
# Как и генераторные выражения списковые включения поддерживаю несколько
# циклов и логические проверки для каждого из циклов. Можно воспринимать их как
# синтаксический сахар, более короткую запись. Например выбираем все чётные
# числа из исходного списка и складываем их в результирующий.
# Длинный код:
data = [2, 5, 1, 42, 65, 76, 24, 77]
res = []
for item in data:
    if item % 2 == 0:
        res.append(item)
print(f'{res = }')
# Аналогичное решение, но с использованием синтаксического сахара listcomp:
data = [2, 5, 1, 42, 65, 76, 24, 77]
res = [item for item in data if item % 2 == 0]
print(f'{res = }')
# 1. Не создаём пустой список в начале.
# 2. Не пишем двоеточия после цикла и логической проверки.
# 3. Исключаем метод append.
# Итого вместо 4 строк кода получаем одну
